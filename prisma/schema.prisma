// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  TECNICO
  ADMIN
  PACIENTE
}
model User {
  id               String          @id @default(uuid()) // UUID para identificação única
  name             String
  email            String          @unique
  status           String          // Para verificar se é hipertenso ou diabético
  nip              String
  born_at          DateTime
  phone            String
  updated_at       DateTime        @default(now())
  adress           String
  created_at       DateTime        @default(now())
  image_path       String?
  role             Role            @default(PACIENTE) // Enum para papéis no sistema
  notification     notification[]
  sent_messages    messages[]      @relation("sender") // Mensagens enviadas
  received_messages messages[]     @relation("receiver") // Mensagens recebidas

  unit_name        String
  unit_adress      String
  health_status    health_status[]

  @@map("users") // Nome correto da tabela no banco
}


model notification {
  id         Int      @id @default(autoincrement())
  status     Boolean @default(false)
  created_at DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  userId     String

  @@map("notif")
}

model messages {
  id          Int      @id @default(autoincrement())
  content     String
  send_at     DateTime @default(now())
  senderId    String
  status Boolean @default(false)
  receiverId  String
  sender      User     @relation("sender", fields: [senderId], references: [id])
  receiver    User     @relation("receiver", fields: [receiverId], references: [id])

  @@map("messages") // Nome correto da tabela no banco
}

model health_status {
  id             Int      @id @default(autoincrement())
  created_at     DateTime @default(now())
  blood_pressure Float
  blood_glucose  Float
  cholesterol    Float
  weigth         Float
  triglycerides  Float
  user           User     @relation(fields: [userId], references: [id])
  userId String
}
